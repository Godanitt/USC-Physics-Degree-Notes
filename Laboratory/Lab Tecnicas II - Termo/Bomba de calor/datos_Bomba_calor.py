# -*- coding: utf-8 -*-
"""
Created on Thu Feb 16 09:15:24 2023

@author: danie
"""


import numpy as np
import matplotlib.pyplot as plt


def media(u):
    if type(u)==int or type(u)==float:
        u = [u]
    m=sum(u)/len(u)
    return m


# ---------- Primer caudal

# Valores caudal e incertidumbre

ms1 = 50 
sms1 = 2


# Temperaturas

T11=[17.7,17.7,17.6,17.7,17.8]
T12=[53.8,54.0,54.1,54.1,54.1]
T13=[24.8,24.9,24.9,24.9,24.9]
T14=[6.8,6.7,6.8,6.7,6.7]
T15=[20.0,20.0,20.1,20.0,20.0]
T16=[26.0,26.0,26.2,26.0,25.9]
T17=[20.1,19.9,20.2,20.3,20.5]
T18=[12.1,12.1,12.3,12.3,12.2]

Pcond1 = 600
Pvap1  = 250

sPcond = 50
sPvap = 25

# ---------- Segundo caudal

# Valores caudal e incertidumbres

ms2 = 40
sm2 = 2

# Medidas no estacionarias [t1,t2,t3,t4,t5,t6,t7,t8,t]

"""

T =[[17.8,54.8,26.9,8,21.2,28.8,20.4,13.0,2],[17.8,55.1,27.3,7.8,21.3,28.8,20.3,13.0,4],
    [17.9,55.2,27.5,7.7,21.7,29.4,20.7,13.0,6],[18.8,55.4,27.6,7.7,21.5,28.9,20.7,12.9,8.5],
    [18.1,55.4,27.6,8.0,21.7,29.2,21.0,13.0,11],[18.2,55.6,27.7,7.9,21.8,29.2,21.2,13.1,17.5],
    [18.4,55.7,27.8,8.0,21.8,29.4,21.0,13.2,20],[18.2,55.7,27.9,7.9,21.9,29.3,20.6,13.1,24],
    [17.4,55.4,27.7,7.5,21.8,29.2,20.0,12.8,26],[17.1,55.3,27.6,7.2,21.8,29.0,20.0,12.5,29.5],
    [16.4,55.0,27.5,7.0,21.7,29.0,19.4,12.5,33],[16.1,54.8,27.4,7.0,21.8,29.2,19.8,12.5,35.5],
    [16.9,54.9,27.4,6.9,21.8,29.0,20.2,12.4,38],[17.2,55.1,27.4,7.1,22.0,29.3,20.2,12.5,40],
    [17.3,55.2,27.5,7.4,21.9,29.2,20.2,12.6,42.75]]

p =[[275,650,5],[275,650,6],[275,650,8.5],[275,650,11],[250,650,31],[250,650,39]]

T = np.array(T)
p = np.array(p)



for i in range(len(T[0])-1):
    plt.figure()
    plt.grid(True)
    plt.plot(T[:,8],T[:,i],"--",color="indigo",label="T %d"%(i+1))
    plt.xlabel("min")
    plt.ylabel("T ($C^o$)")
    plt.ylim(min(T[:,i])-1.5,max(T[:,i])+1.5)
    plt.legend(loc="upper left")
    
"""
    
# Medidas estacionarias



T21=[17.5,17.5,17.5,17.6,17.7,17.7]
T22=[55.2,55.3,55.2,55.2,55.3,55.3]
T23=[27.6,27.6,27.6,26.5,27.5,27.6]
T24=[7.5,7.5,7.5,7.4,7.6,7.6]
T25=[21.9,21.8,21.8,21.8,21.8,21.7]
T26=[29.2,29.1,29.0,29.0,29.3,29.1]

sT1 = 0.1

T27=[20.4,20.5,20.4,20.5,20.4,20.4]
T28=[12.8,12.7,12.8,12.8,12.8,12.9]


sTair1e = 0.2

# Presiones en KN/m2

Pcond2 = [650,700]
Pvap2  = [250,275,275,275]

sPcond2 = 50
sPvap2 = 25



# ---------- Tercer caudal

ms3=30
sms3 = 2

# Medidas no estacionarias 

"""

T = [[17.3,56.3,31.0,9.1,23.6,33.9,20.3,14.0,1.5],[17.7,57.1,31.7,8.6,23.9,33.7,20.7,12.6,5.25],
     [17.7,57.4,32.2,8.9,24.2,34.6,20.4,13.7,8.5],[17.8,57.5,32.2,8.7,24.1,34.2,20.6,13.6,11.25],
     [17.8,57.6,32.2,8.8,24.1,34.1,20.8,13.7,14.0]]

p=[[275,800,2.5],[275,750,5.75],[275,800,9],[275,800,12.5]]



T = np.array(T)
p = np.array(p)



for i in range(len(T[0])-1):
    plt.figure()
    plt.grid(True)
    plt.plot(T[:,8],T[:,i],"--",color="indigo",label="T %d"%(i+1))
    plt.xlabel("min")
    plt.ylabel("T ($C^o$)")
    plt.ylim(min(T[:,i])-1.5,max(T[:,i])+1.5)
    plt.legend(loc="upper left")

"""

#Medidas estacionarias  [t1,t2,t3,t4,t5,t6,t7,t8]

T31 = [17.9,17.9,17.9,18.0,18.1,18.0]
T32 = [57.6,57.7,57.7,57.7,57.7,57.7]
T33 = [32.0,32.1,32.0,31.8,31.9,32.1]
T34 = [8.9,8.9,8.7,8.7,8.9,9.0]
T35 = [24.1,24.0,24.0,24.0,24.1,24.3]
T36 = [34.5,34.0,33.8,34.0,34.3,34.8]
T37 = [20.8,20.7,21.2,21.0,20.7,20.4]
T38 = [13.7,13.8,13.6,13.7,13.7,13.6]

sT = 0.1

Pcond3 =  [800,800,800,800,800]
Pvap3 = [275,275,275,275,275]


sPcond2 = 50
sPvap2 = 25


# ---------- Cuarto cauldal

ms4 = 25
sms4 = 2

# Medidas no estacionarias

"""

T = [[17.7,58.3,34.4,9.7,25.1,37.4,20.6,14.2,0.75],[17.7,58.7,34.7,9.3,25.2,37.2,21.0,14.2,3],
     [17.9,59.1,34.7,9.3,25.3,37.3,21.0,14.1,6],[17.8,59.3,34.8,9.4,25.3,37.4,20.8,14.1,9],
     [17.8,59.3,34.7,9.2,25.1,37.5,20.8,14.1,11]]
p=[[300,850,1],[275,850,3.5],[275,850,6]]
T = np.array(T)
p = np.array(p)



for i in range(len(T[0])-1):
    plt.figure()
    plt.grid(True)
    plt.plot(T[:,8],T[:,i],"--",color="indigo",label="T %d"%(i+1))
    plt.xlabel("min")
    plt.ylabel("T ($C^o$)")
    plt.ylim(min(T[:,i])-1.5,max(T[:,i])+1.5)
    plt.legend(loc="upper left")


"""

# Medidas estacionarias

T41 = [17.8,17.8,17.7,17.7,17.7]
T42 = [59.3,59.4,59.4,59.4,59.5]
T43 = [34.5,34.7,34.7,34.6,34.7]
T44 = [9.1,9.3,9.3,9.2,9.1]
T45 = [25.2,25.2,25.2,25.3,25.2]
T46 = [37.3,37.5,37.2,37.6,37.2]
T47 = [20.6,20.6,20.6,20.6,20.5]
T48 = [13.9,14.0,14.0,13.9,13.9]

Pcond4 = [850,850,850,850,850]
Pvap4  = [275,300,300,300,500]



# --------- Quinto caudal

ms5= 20
sms5 = 2

# Medidas no estacionarias

"""
T = [[17.4,60.9,37.8,9.7,26.6,42.5,20.2,14.4,0],[17.4,61.1,37.9,9.7,26.6,41.4,20.3,14.4,1],
     [17.4,61.1,37.9,9.6,26.7,41.4,20.4,14.3,2],[17.4,61.2,37.9,9.7,26.7,41.5,20.4,14.4,3],
     [17.4,61.4,38.1,9.6,26.8,41.8,20.4,14.3,5],[17.4,61.5,38.1,9.6,26.7,41.4,20.3,14.4,7],
     [17.4,61.5,38.0,9.5,26.7,41.3,20.4,14.4,8],[17.4,61.5,37.9,9.5,26.7,41.4,20.1,14.2,9.5],
     [17.3,61.6,38.0,9.5,26.8,41.5,20.4,14.3,12.5]]
p= [[300,950,2],[300,950,4]]
T = np.array(T)
p = np.array(p)



for i in range(len(T[0])-1):
    plt.figure()
    plt.grid(True)
    plt.plot(T[:,8],T[:,i],"--",color="indigo",label="T %d"%(i+1))
    plt.xlabel("min")
    plt.ylabel("T ($C^o$)")
    plt.ylim(min(T[:,i])-1.5,max(T[:,i])+1.5)
    plt.legend(loc="upper left")

"""

# Medidas estacionarias

T51 = [17.4,17.4,17.4,17.3,17.3]
T52 = [61.6,61.7,61.7, 61.8,61.7]
T53 = [38.0,38.2,38.2,38.2,38.2]
T54 = [9.5,9.6,9.6,9.5,9.6]
T55 = [26.8,26.8,26.8,26.8,26.9]
T56 = [41.8,41.8,41.7,41,7,41.7]
T57 = [20.4,20.4,20.2,20.2,20.2]
T58 = [14.3,14.2,14.2,14.2,14.2]


Pcond5 = [950]
Pvap5 = [300]

# -------- Sexto Caudal

ms6 = 15
sms6 = 2

# Medidas no estacionarias

"""

T = [[17.3,64.0,42.4,10.0,28.4,48.0,20.2,14.5,1],[17.4,64.6,43.0,9.9,28.5,47.6,20.4,14.6,3],
     [17.4,64.9,42.9,10.0,28.6,48.2,20.3,14.6,4.5],[17.5,65.3,43.2,10.1,28.7,48.2,20.7,14.6,7],
     [17.7,65.7,43.5,10.3,28.6,48.1,20.6,14.6,9],[17.5,65.7,43.4,10.2,28.6,48.4,20.3,14.7,11],
     [17.6,66.0,43.7,10.2,28.7,48.4,20.6,14.7,13.5],[17.7,66.0,43.6,10.3,28.7,48.2,20.8,14.8,15.5],
     [17.8,66.0,43.4,10.3,28.7,48.0,20.7,14.8,17.5],[17.6,66.0,43.3,10.4,28.6,48.0,20.6,14.8,19]]
p= [[300,1100,1.5],[300,1100,9]]
T = np.array(T)
p = np.array(p)


for i in range(len(T[0])-1):
    plt.figure()
    plt.grid(True)
    plt.plot(T[:,8],T[:,i],"--",color="black",label="T %d"%(i+1))
    plt.xlabel("min")
    plt.ylabel("T ($C^o$)")
    plt.ylim(min(T[:,i])-1.5,max(T[:,i])+1.5)
    plt.legend(loc="upper left")

"""
    
# Medidas estacionarias

T61 = [17.6,17.7,17.6,17.6,17.6]
T62 = [66.0,66.1,66.1,66.1,66.1]
T63 = [43.6,43.6,43.5,43.5,43.4]
T64 = [10.4,10.4,10.3,10.2,10.3]
T65 = [28.7,28.6,28.6,28.6,28.6]
T66 = [48.4,48.3,48.1,48.0,48.0]
T67 = [21.0,20.8,20.8,20.8,20.7]
T68 = [14.9,14.9,14.8,14.8,14.8]

Pcond6= [1100]
Pvap6 = [300]


# ---------- Septimo Caudal


ms7 = 10
sms7 = 2

#Medidas no estacionarias

"""

T = [[17.6,68.3,47.4,10.7,29.7,55.3,20.5,15.0,1],[17.5,69.2,48.8,10.7,29.9,55.8,20.6,15.1,2],
     [17.7,70.0,49.3,10.8,30.0,56.1,20.7,15.2,4],[17.8,70.5,49.8,10.8,30.1,56.4,20.4,15.0,5.5],
     [17.8,71.2,50.4,10.9,30.3,56.7,20.6,15.1,9.5],[17.8,71.3,50.1,10.8,30.2,56.4,20.7,15.0,11],
     [17.9,71.4,50.1,10.9,30.2,56.5,20.7,15.2,12.5],[17.9,71.5,50.1,10.9,30.2,56.7,20.6,15.2,14.5],
     [17.9,71.8,50.4,10.9,30.4,56.9,20.9,15.2,15.75],[17.9,71.9,50.3,10.9,30.3,56.8,20.6,15.1,18],
     [17.8,72.0,50.3,10.9,30.4,56.8,20.4,15.1,20.25]]
p= [[300,1350]]
T = np.array(T)
p = np.array(p)



for i in range(len(T[0])-1):
    plt.figure()
    plt.grid(True)
    plt.plot(T[:,8],T[:,i],"--",color="black",label="T %d"%(i+1))
    plt.xlabel("min")
    plt.ylabel("T ($C^o$)")
    plt.ylim(min(T[:,i])-1.5,max(T[:,i])+1.5)
    plt.legend(loc="upper left")
"""



# Medidas estacionarias


T71  = [17.6,17.7,17.7,17.7,17.7]
T72 = [72.3,72.3,72.4,72.4,72.4]
T73 = [50.4,50.4,50.5,50.5,50.4]
T74 = [10.7,10.7,10.7,10.7,10.7]
T75 = [30.4,30.5,30.5,30.5,30.4]
T76 = [57.0,57.2,57.1,56.9,56.7]
T77 = [20.7,20.8,20.9,20.7,20.6]
T78 = [15.1,15.1,15.2,15.1,15.0]

Pcond7 =[1350]
Pvap7 = [325]



#Creaccion de tablas


T1 = np.array([T11,T21,T31,T41,T51,T61,T71])
T2 = np.array([T12,T22,T32,T21,T52,T62,T72])
T3 = np.array([T13,T23,T33,T33,T53,T63,T73])
T4 = np.array([T14,T23,T34,T44,T54,T64,T74])
T5 = np.array([T15,T25,T35,T45,T55,T65,T75])
T6 = np.array([T16,T26,T36,T46,T56,T66,T76])
T7 = np.array([T17,T27,T37,T47,T57,T67,T77])
T8 = np.array([T18,T28,T38,T48,T58,T68,T78])

PC = [Pcond1,Pcond2,Pcond3,Pcond4,Pcond5,Pcond6,Pcond7]
PV = [Pvap1,Pvap2,Pvap3,Pvap4,Pvap5,Pvap6,Pvap7]

ms = [ms1,ms2,ms3,ms4,ms5,ms6,ms7]


W=[268,277,289,293,307,318,343]


for i in range(len(T1)):
    outfile=open("Tabla.txt","a")    
    outfile.write("\\section{Caudal nÃºmero %d} \n \n"%(i+1))
    outfile.write("Los datos para este caudal:  \n \n")            
    outfile.write("\\begin{equation} \n")
    outfile.write("\\begin{array}{lllllll}\n")
    outfile.write("P_c & = & %d KPa &  \ \ &  s(P_c) & =  & %d  KPa \\\ \n "%(media(PC[i]),sPcond))
    outfile.write("P_v & = & %d KPa &  \ \ &  s(P_v) & =  & %d  KPa\\\ \n "%(media(PV[i]),sPvap))
    outfile.write("Q & = & %.1f g/s &  \ \ &  s(Q) & =  & %.1f  g/s \\\ \n "%(ms[i],sms1))
    outfile.write("W & = & %d J & & & & \\\ \n"%W[i])
    outfile.write("\\end{array} \n")
    outfile.write("\\end{equation} \n \n")
    
    T = np.array([T1[i],T2[i],T3[i],T4[i],T5[i],T6[i],T7[i],T8[i]])
    
    M = 0
    
    for j in range(len(T)):
        p = len(T[j])
        print(p)
        if M>p:
            M = p
            
            
    for j in range(len(T)):
        while(len(T[j])<M):
            T[j]=np.append(T[j],"-")
                    
    
    outfile.write("\\begin{table}[h!] \t \centering \n")
    outfile.write("\\begin{tabular}{|c|c|c|c|c|c|c|c|} \n")
    outfile.write("\\hline \n")
    outfile.write("$T_1$ & $T_2$ & $T_3$ & $T_4$ & $T_5$ & $T_6$ & $T_7$ & $T_8$ \\\ \\hline \n")
    for j in range(len(T[i])):
        outfile.write("%.1f & %.1f & %.1f & %.1f & %.1f & %.1f & %.1f & %.1f  \\\  \n"%(T[0][j],T[1][j],T[2][j],T[3][j],T[4][j],T[5][j],T[6][j],T[7][j]))
    outfile.write("\\hline \n")
    outfile.write("\\end{tabular} \n")
    outfile.write("\\label{tab:regresion%i} \n"%(i+1))
    outfile.write("\\end{table} \n \n \n")
    outfile.close()
    
    
    
    
    
    
    


















